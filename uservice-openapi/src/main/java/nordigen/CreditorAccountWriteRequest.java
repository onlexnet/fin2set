/*
 * Nordigen Account Information Services API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0 (v2)
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package nordigen;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Creditor account write serializer.
 */@ApiModel(description = "Creditor account write serializer.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaClientCodegen", date = "2023-02-25T17:56:18.166387600+01:00[Europe/Warsaw]")
public class CreditorAccountWriteRequest {

  
  @JsonProperty("name")
  private String name = null;
  
  
  @JsonProperty("type")
  private Object type;
  
  
  @JsonProperty("account")
  private String account = null;
  
  
  @JsonProperty("currency")
  private String currency = null;
  
  
  @JsonProperty("address_country")
  private AddressCountryEnum addressCountry = null;
  
  
  @JsonProperty("institution_id")
  private String institutionId = null;
  
  
  @JsonProperty("agent")
  private String agent = null;
  
  
  @JsonProperty("agent_name")
  private String agentName = null;
  
  
  @JsonProperty("address_street")
  private String addressStreet = null;
  
  
  @JsonProperty("post_code")
  private String postCode = null;
  
  public CreditorAccountWriteRequest name(String name) {
    this.name = name;
    return this;
  }

  
  /**
  * Creditor account name
  * @return name
  **/
  @ApiModelProperty(required = true, value = "Creditor account name")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }
  
  public CreditorAccountWriteRequest type(Object type) {
    this.type = type;
    return this;
  }

  
  /**
  * Creditor account type
  * @return type
  **/
  @ApiModelProperty(value = "Creditor account type")
  public Object getType() {
    return type;
  }
  public void setType(Object type) {
    this.type = type;
  }
  
  public CreditorAccountWriteRequest account(String account) {
    this.account = account;
    return this;
  }

  
  /**
  * Creditor account type identifier
  * @return account
  **/
  @ApiModelProperty(required = true, value = "Creditor account type identifier")
  public String getAccount() {
    return account;
  }
  public void setAccount(String account) {
    this.account = account;
  }
  
  public CreditorAccountWriteRequest currency(String currency) {
    this.currency = currency;
    return this;
  }

  
  /**
  * Creditor account currency
  * @return currency
  **/
  @ApiModelProperty(required = true, value = "Creditor account currency")
  public String getCurrency() {
    return currency;
  }
  public void setCurrency(String currency) {
    this.currency = currency;
  }
  
  public CreditorAccountWriteRequest addressCountry(AddressCountryEnum addressCountry) {
    this.addressCountry = addressCountry;
    return this;
  }

  
  /**
  * Get addressCountry
  * @return addressCountry
  **/
  @ApiModelProperty(value = "")
  public AddressCountryEnum getAddressCountry() {
    return addressCountry;
  }
  public void setAddressCountry(AddressCountryEnum addressCountry) {
    this.addressCountry = addressCountry;
  }
  
  public CreditorAccountWriteRequest institutionId(String institutionId) {
    this.institutionId = institutionId;
    return this;
  }

  
  /**
  * an Institution ID for this CreditorAccount
  * @return institutionId
  **/
  @ApiModelProperty(value = "an Institution ID for this CreditorAccount")
  public String getInstitutionId() {
    return institutionId;
  }
  public void setInstitutionId(String institutionId) {
    this.institutionId = institutionId;
  }
  
  public CreditorAccountWriteRequest agent(String agent) {
    this.agent = agent;
    return this;
  }

  
  /**
  * Creditor account BICFI Identifier
  * @return agent
  **/
  @ApiModelProperty(value = "Creditor account BICFI Identifier")
  public String getAgent() {
    return agent;
  }
  public void setAgent(String agent) {
    this.agent = agent;
  }
  
  public CreditorAccountWriteRequest agentName(String agentName) {
    this.agentName = agentName;
    return this;
  }

  
  /**
  * Creditor account agent name
  * @return agentName
  **/
  @ApiModelProperty(value = "Creditor account agent name")
  public String getAgentName() {
    return agentName;
  }
  public void setAgentName(String agentName) {
    this.agentName = agentName;
  }
  
  public CreditorAccountWriteRequest addressStreet(String addressStreet) {
    this.addressStreet = addressStreet;
    return this;
  }

  
  /**
  * Creditor account address street
  * @return addressStreet
  **/
  @ApiModelProperty(value = "Creditor account address street")
  public String getAddressStreet() {
    return addressStreet;
  }
  public void setAddressStreet(String addressStreet) {
    this.addressStreet = addressStreet;
  }
  
  public CreditorAccountWriteRequest postCode(String postCode) {
    this.postCode = postCode;
    return this;
  }

  
  /**
  * Creditor account address post code
  * @return postCode
  **/
  @ApiModelProperty(value = "Creditor account address post code")
  public String getPostCode() {
    return postCode;
  }
  public void setPostCode(String postCode) {
    this.postCode = postCode;
  }
  
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreditorAccountWriteRequest creditorAccountWriteRequest = (CreditorAccountWriteRequest) o;
    return Objects.equals(this.name, creditorAccountWriteRequest.name) &&
        Objects.equals(this.type, creditorAccountWriteRequest.type) &&
        Objects.equals(this.account, creditorAccountWriteRequest.account) &&
        Objects.equals(this.currency, creditorAccountWriteRequest.currency) &&
        Objects.equals(this.addressCountry, creditorAccountWriteRequest.addressCountry) &&
        Objects.equals(this.institutionId, creditorAccountWriteRequest.institutionId) &&
        Objects.equals(this.agent, creditorAccountWriteRequest.agent) &&
        Objects.equals(this.agentName, creditorAccountWriteRequest.agentName) &&
        Objects.equals(this.addressStreet, creditorAccountWriteRequest.addressStreet) &&
        Objects.equals(this.postCode, creditorAccountWriteRequest.postCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, type, account, currency, addressCountry, institutionId, agent, agentName, addressStreet, postCode);
  }
  
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreditorAccountWriteRequest {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    addressCountry: ").append(toIndentedString(addressCountry)).append("\n");
    sb.append("    institutionId: ").append(toIndentedString(institutionId)).append("\n");
    sb.append("    agent: ").append(toIndentedString(agent)).append("\n");
    sb.append("    agentName: ").append(toIndentedString(agentName)).append("\n");
    sb.append("    addressStreet: ").append(toIndentedString(addressStreet)).append("\n");
    sb.append("    postCode: ").append(toIndentedString(postCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
}



